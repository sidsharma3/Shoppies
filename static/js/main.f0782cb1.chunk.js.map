{"version":3,"sources":["components/MovieCard.js","components/Movies.js","components/Search.js","components/NominationCard.js","components/Nominations.js","components/Spinner.js","components/Landing.js","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","movie","addNomination","className","width","height","alt","Title","src","Poster","Year","disabled","nominated","onClick","Movies","movies","length","map","index","Search","setSearchWords","useState","curInput","setCurInput","type","placeholder","onChange","e","target","value","NominationCard","nomination","deleteNomination","imdbID","Nominations","nominations","Spinner","Landing","setShowLanding","App","JSON","parse","localStorage","getItem","setNominated","searchWords","resultsLoading","setResultsLoading","showLanding","setMovies","useEffect","axios","get","then","res","data","Response","searchedMovies","uniqueMovies","forEach","some","Object","values","console","log","catch","message","setItem","stringify","store","addNotification","title","insert","container","animationIn","animationOut","dismiss","duration","onScreen","newMovies","id","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0782cb1.chunk.js","sourcesContent":["import Zoom from 'react-reveal/Zoom';\r\n\r\nconst MovieCard = ({ movie, addNomination }) => {\r\n    return (\r\n        <Zoom>\r\n            <div className=\"movie\">\r\n                <img \r\n                    width=\"210\" \r\n                    height=\"315\" \r\n                    alt={movie.Title} \r\n                    src={movie.Poster}\r\n                />\r\n                <h3>{ movie.Title }</h3>\r\n                <h2>{ movie.Year }</h2>\r\n                <button \r\n                    className=\"button\" \r\n                    disabled={movie.nominated} \r\n                    onClick={() => addNomination(movie)}\r\n                >\r\n                    {!movie.nominated ? (\"Nominate Me!\") : (\"Nominated!\")}\r\n                </button>\r\n            </div>\r\n        </Zoom>\r\n    )\r\n}\r\n\r\nexport default MovieCard","import MovieCard from './MovieCard'\r\n\r\nconst Movies = ({movies, addNomination }) => {\r\n    return (\r\n        <div className=\"movieContainer\">\r\n            {movies.length === 0 ? (\r\n            <h1>\r\n                No movies were found! Use the search bar above to find movies!\r\n            </h1>) : \r\n            (<>\r\n                <h1>Search Results:</h1>\r\n                <div className=\"movies\">\r\n                    {movies.map((movie, index) => (\r\n                        <>\r\n                            <MovieCard \r\n                                key={index} \r\n                                movie={movie} \r\n                                addNomination={addNomination}\r\n                            />\r\n                        </>\r\n                    ))}\r\n                </div>\r\n            </>)}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies","import { useState } from 'react'\r\n\r\nconst Search = ({setSearchWords}) => {\r\n    const [curInput, setCurInput] = useState(\"\")\r\n    return (\r\n        <div className=\"searchBar\" >\r\n            <input \r\n                type=\"text\"\r\n                placeholder={\"Search Movies\"}\r\n                onChange={(e) => setCurInput(e.target.value)}\r\n            />\r\n            <button disabled={curInput.length <= 2} \r\n            onClick={() => setSearchWords(curInput)}>Search!</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import Zoom from 'react-reveal/Zoom';\r\n\r\nconst NominationCard = ({ nomination, deleteNomination }) => {\r\n    return (\r\n        <Zoom>\r\n            <div className=\"nomination\">\r\n                <h3>{nomination.Title}</h3>\r\n                <h2>{nomination.Year}</h2>\r\n                <img width=\"180\" height=\"270\" \r\n                alt={nomination.Title} src={nomination.Poster}/>\r\n                \r\n                <button \r\n                    onClick=\r\n                    {() => deleteNomination(nomination, nomination.imdbID)}\r\n                >\r\n                    Delete!\r\n                </button>\r\n            </div>\r\n        </Zoom>\r\n    )\r\n}\r\n\r\nexport default NominationCard\r\n","import NominationCard from './NominationCard'\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\nconst Nominations = ({nominations, deleteNomination }) => {\r\n    return (\r\n        <div className=\"nominationContainer\">\r\n            \r\n            {nominations.length === 0 ? \r\n            (\r\n                <Zoom>\r\n                    <h1 className=\"explanation\">\r\n                        Click on one of the movies below to nominate them!\r\n                    </h1>\r\n                </Zoom>\r\n            ) : \r\n            (\r\n                <>\r\n                <h1>Nominations:</h1>\r\n                <div className=\"nominations\">\r\n                        {nominations.map((nomination, index) => (\r\n                            <NominationCard \r\n                                key={index} \r\n                                nomination={nomination} \r\n                                deleteNomination={deleteNomination}\r\n                            />\r\n                        ))}\r\n                </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nominations","import React from 'react'\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <div className=\"loading\">\r\n            <div className=\"spinner\">\r\n            </div>\r\n            <p>Loading Movies...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\n\r\nfunction Landing({setShowLanding}) {\r\n    return (\r\n        <div className=\"landing\">\r\n           <h1>Welcome to the Shoppies!</h1>\r\n           <p>Click the button below to get started in searching \r\n               for and nomianting five movies for the <span>Shoppies</span></p>\r\n               \r\n           <button onClick={() => setShowLanding(false)}>\r\n               Click to get started</button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing\r\n","import { useState, useEffect } from 'react'\nimport Movies from './components/Movies'\nimport Search from './components/Search'\nimport Nominations from './components/Nominations'\nimport Spinner from './components/Spinner'\nimport Landing from './components/Landing'\nimport Zoom from 'react-reveal/Zoom';\nimport { store } from 'react-notifications-component';\nimport axios from 'axios';\n\nfunction App() {\n\n  const [nominated, setNominated] = \n  useState(JSON.parse(localStorage.getItem(\"nominations\")) || [])\n  const [searchWords, setSearchWords] = useState(\"movie\")\n  const [resultsLoading, setResultsLoading] = useState(true)\n  const [showLanding, setShowLanding] = useState(true)\n  const [movies, setMovies] = useState([])\n\n  useEffect(() => {\n    setResultsLoading(true)\n    axios.get(`http://www.omdbapi.com/?s=${searchWords}&apikey=6cbaeff6`)\n    .then(res => {\n      if (res.data.Response !== \"False\") {\n        const searchedMovies = [...res.data.Search]\n        // Prevents any duplicated movies\n        let uniqueMovies = {}\n        searchedMovies.forEach(function (movie) {          \n          if(nominated.some(nomination => nomination.imdbID === movie.imdbID)){\n            movie.nominated = true;\n          } else{\n            movie.nominated = false;\n          }\n          uniqueMovies[movie.imdbID] = movie;\n        });\n        setMovies(Object.values(uniqueMovies))\n      } else {\n        setResultsLoading(false)\n        setMovies([])\n        console.log(\"error in search\")\n      }\n    }).catch(({message}) => console.log(message))\n  }, [searchWords])\n\n  useEffect(() => {\n    setResultsLoading(false)\n    localStorage.setItem(\"movies\", JSON.stringify(movies));\n    setMovies(movies)\n  }, [movies]);\n\n  useEffect(() => {\n    localStorage.setItem(\"nominations\", JSON.stringify(nominated));\n    if (nominated.length === 5){\n      store.addNotification({\n        title: \"Great Job!\",\n        message: \"You Nominated Five Movies!\",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true\n        }\n      });\n    }\n    let newMovies = [...movies]\n\n    newMovies.forEach(function (movie) {\n      if(nominated.some(nomination => nomination.imdbID === movie.imdbID)){\n        movie.nominated = true;\n      } else{\n        movie.nominated = false;\n      }\n    });\n\n    setMovies(newMovies)\n\n  }, [nominated]);\n\n  const addNomination = (nomination) => {\n    if (nominated.length !== 5) {\n      nomination.nominated = true;\n      setNominated([...nominated, nomination])\n    } else {\n      store.addNotification({\n        title: \"There is an Issue!\",\n        message: \"You Can Only Nominate Five Movies\",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true\n        }\n      });\n    }\n\n  }\n\n  const deleteNomination = (movie, id) => {\n    setNominated(\n      nominated.filter((nomination) => nomination.imdbID !== movie.imdbID))\n    movie.nominated = false;\n  }\n\n\n  return (\n    <div className=\"app\">\n      {showLanding ? \n        (<Zoom><Landing setShowLanding={setShowLanding}/></Zoom>) \n        : \n        (<div className=\"container\">\n          {nominated.length === 5 && \n          <h1>Awesome! You Nominated Five Movies!</h1>}\n          <Nominations \n            nominations={nominated} \n            deleteNomination={deleteNomination}\n          />\n          <Search setSearchWords={setSearchWords}/>\n          {!resultsLoading ? \n            (<Movies movies={movies} addNomination={addNomination}/>) :\n            (<Spinner/>)\n          }\n        </div>)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ReactNotification from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReactNotification />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}